package view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;

import model.Holiday;
import model.PublicCustomer;
import model.Staff;
import model.StaffCustomer;
import control.Sytem;

public class Parking extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/** Creates new form Parking */
	public Parking() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents() {

		entrance = new javax.swing.JLabel();
		campusId = new javax.swing.JLabel();
		staffId = new javax.swing.JTextField();
		scanButton = new javax.swing.JButton();
		staff1 = new javax.swing.JLabel();
		getTicketBtn = new javax.swing.JButton();
		paymentStation = new javax.swing.JLabel();
		publicPay = new javax.swing.JLabel();
		publicId = new javax.swing.JTextField();
		publicPayBtn = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		fee = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jButton5 = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		pay = new javax.swing.JLabel();
		exit = new javax.swing.JLabel();
		all = new javax.swing.JLabel();
		id = new javax.swing.JTextField();
		exitBtn = new javax.swing.JButton();
		date = new JLabel();
		time = new JLabel();
		allowForPublic = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		coinBoxStatus = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		enterTime = new javax.swing.JLabel();
		jLabel9 = new javax.swing.JLabel();
		exitTime = new javax.swing.JLabel();
		getExitTicketBtn = new javax.swing.JButton();
		helpBtn = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		date.setText(getTime(true));
		dateTimer = new Timer(60*1000, new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				date.setText(getTime(true));
				if (allowPublicPark()) {
					allowForPublic.setText(": ALLOWED");
				}else {
					allowForPublic.setText(": UNALLOWED");
				}
			}
		});
		dateTimer.start();
		
		time.setText(getTime(false));
		timeTimer = new Timer(1000, new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				time.setText(getTime(false));
			}
		});
		timeTimer.start();
		
		entrance.setFont(new java.awt.Font("微软雅黑", 1, 14));
		entrance.setText("ENTRANCE");

		campusId.setFont(new java.awt.Font("微软雅黑", 1, 12));
		campusId.setText("CAMPUS ID");


		scanButton.setFont(new java.awt.Font("微软雅黑", 1, 12));
		scanButton.setText("SCAN");
		scanButton.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				if (Sytem.spaceNoList.size()>0) {
					String id = staffId.getText();
					if (id!=null && !"".equals(id))  {
						Staff staffInfo = findStaffById(staffId.getText());
						if (staffInfo!=null) {
							if (!Sytem.consumerHashtable.containsKey(id)) {
								StaffCustomer staffCustomer = new StaffCustomer();
								staffCustomer.setStaff(staffInfo);
								staffCustomer.setEnterDate(new Date());
								staffCustomer.setSpaceNo(Sytem.spaceNoList.get(0));
								Sytem.spaceNoList.remove(0);
								jLabel4.setText(String.valueOf(Sytem.spaceNoList.size()));
								staffCustomer.setPaid(false);
								Sytem.consumerHashtable.put(id, staffCustomer);
								JOptionPane.showMessageDialog(null, "welcome");
							} else {
								JOptionPane.showMessageDialog(null, "your car is already in");
							}
						}else {
							JOptionPane.showMessageDialog(null, "please register first");
						}
					}else {
						JOptionPane.showMessageDialog(null, "failed to read your card \n please scan again");
					}
				}else {
					JOptionPane.showMessageDialog(null, "there is no available space for your car");
				}
			}
		});

		staff1.setFont(new java.awt.Font("微软雅黑", 1, 12));
		staff1.setText("PUBLIC USE");

		getTicketBtn.setFont(new java.awt.Font("微软雅黑", 1, 12));
		getTicketBtn.setText("GET TICKET");
		getTicketBtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				if (allowPublicPark()) {
            		if (Sytem.spaceNoList.size()>0) {
            			String id = getTempId(Sytem.spaceNoList.get(0));
            			PublicCustomer publicCustomer = new PublicCustomer();
            			publicCustomer.setSpaceNo(Sytem.spaceNoList.get(0));
            			Sytem.spaceNoList.remove(0);
            			jLabel4.setText(String.valueOf(Sytem.spaceNoList.size()));
            			publicCustomer.setEnterDate(new Date());
            			publicCustomer.setPaid(false);
            			Sytem.consumerHashtable.put(id, publicCustomer);
            			Sytem.nowBlankTickets--;
            			jLabel6.setText(String.valueOf(Sytem.nowBlankTickets--));
            			JOptionPane.showMessageDialog(null, "welcome your temp id: "+id);
            		}else {
            			JOptionPane.showMessageDialog(null, "there is no available space for your car");
            		}
				} else {
					JOptionPane.showMessageDialog(null, "parking lot is not available \n for public use today");
				}				
			}
		});

		paymentStation.setFont(new java.awt.Font("微软雅黑", 1, 14));
		paymentStation.setText("PAYMENTSTATION");

		publicPay.setFont(new java.awt.Font("微软雅黑", 1, 12));
		publicPay.setText("TICKET ID");

		publicPayBtn.setFont(new java.awt.Font("微软雅黑", 1, 12));
		publicPayBtn.setText("SCAN");
		publicPayBtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				String id = publicId.getText();
				if (id!=null && !"".equals(id)) {
					if (Sytem.consumerHashtable.containsKey(id)) {
						PublicCustomer customer = Sytem.consumerHashtable.get(id);
						if (!customer.isPaid()) {
							if (customer instanceof StaffCustomer) {
								JOptionPane.showMessageDialog(null, "staff customer can go to the exit directly");
							}else {
								Sytem.consumerHashtable.remove(id);
								pKey = id;
								pConsumer = billForPublicConsumer(customer);
								enterTime.setText(getDisplayTime(pConsumer.getEnterDate()));
								exitTime.setText(getDisplayTime(pConsumer.getExitDate()));
								JOptionPane.showMessageDialog(null, "your bill is "+pConsumer.getBill());
								publicPayBtn.setEnabled(false);
								jButton1.setEnabled(true);
								jButton3.setEnabled(true);
								jButton4.setEnabled(true);
								jButton5.setEnabled(true);
								jButton2.setEnabled(true);
						        fee.setText(publicBill+" pouds");
							}
						} else {
							JOptionPane.showMessageDialog(null, "you have paid the bill");
						}
					} else {
						JOptionPane.showMessageDialog(null, "your car isn't here");
					}
				} else {
					JOptionPane.showMessageDialog(null, "scan you staffid or ticket again");
				}				
			}
		});

		jLabel1.setText("your fee is :");

		fee.setText("0 pouds");

		jButton1.setText("0.1pound");
		jButton1.setEnabled(false);
		jButton1.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				inputMoney = inputMoney.add(new BigDecimal("0.1"));
				pay.setText(inputMoney+" pounds");
				if (inputMoney.compareTo(publicBill)>=0) {
					payForPublicConsumer();
				}
			}
		});

		jButton2.setText("0.2pounds");
		jButton2.setEnabled(false);
		jButton2.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				inputMoney = inputMoney.add(new BigDecimal("0.2"));
				pay.setText(inputMoney+" pounds");
				if (inputMoney.compareTo(publicBill)>=0) {
					payForPublicConsumer();
				}
			}
		});

		jButton3.setText("0.5pounds");
		jButton3.setEnabled(false);
		jButton3.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				inputMoney = inputMoney.add(new BigDecimal("0.5"));
				pay.setText(inputMoney+" pounds");
				if (inputMoney.compareTo(publicBill)>=0) {
					payForPublicConsumer();
				}
			}
		});

		jButton4.setText("1 pounds");
		jButton4.setEnabled(false);
		jButton4.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				inputMoney = inputMoney.add(new BigDecimal("1"));
				pay.setText(inputMoney+" pounds");
				if (inputMoney.compareTo(publicBill)>=0) {
					payForPublicConsumer();
				}
			}
		});

		jButton5.setText("2 pounds");
		jButton5.setEnabled(false);
		jButton5.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				inputMoney = inputMoney.add(new BigDecimal("2"));
				pay.setText(inputMoney+" pounds");
				if (inputMoney.compareTo(publicBill)>=0) {
					payForPublicConsumer();
				}
			}
		});

		jLabel2.setText("you have put :");

		pay.setText("0 pouds");

		exit.setFont(new java.awt.Font("微软雅黑", 1, 14));
		exit.setText("EXIT");

		all.setFont(new java.awt.Font("微软雅黑", 1, 12));
		all.setText("ALL ID");

		exitBtn.setFont(new java.awt.Font("微软雅黑", 1, 12));
		exitBtn.setText("SCAN");
		exitBtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				String allId = id.getText();
				if(allId!=null && !"".equals(allId)){
					if (Sytem.consumerHashtable.containsKey(allId)) {
						PublicCustomer customer = Sytem.consumerHashtable.get(allId);
						Sytem.consumerHashtable.remove(allId);
						if (customer instanceof StaffCustomer) {
							payForStaffConsumer((StaffCustomer) customer);
							Sytem.spaceNoList.add(customer.getSpaceNo());
							jLabel4.setText(String.valueOf(Sytem.spaceNoList.size()));
							saveRecord((StaffCustomer)customer);
							JOptionPane.showMessageDialog(null, "have a nice trip");
						} else {
							if (customer.isPaid()) {
								Sytem.spaceNoList.add(customer.getSpaceNo());
								jLabel4.setText(String.valueOf(Sytem.spaceNoList.size()));
								JOptionPane.showMessageDialog(null, "have a nice trip");
							}else {
								JOptionPane.showMessageDialog(null, "please pay first");
								Sytem.consumerHashtable.put(allId, customer);
							}
						}
					}else {
						JOptionPane.showMessageDialog(null, "Wrong input");
					}
				}else {
					JOptionPane.showMessageDialog(null, "please scan your staffId or ticket again");
				}
			}
		});
		
		allowForPublic.setFont(new java.awt.Font("微软雅黑", 1, 12));

		jLabel3.setFont(new java.awt.Font("微软雅黑", 1, 12));
		jLabel3.setText("AVAILABLE PARKING SPACE  :");

		jLabel4.setFont(new java.awt.Font("微软雅黑", 1, 12));
		jLabel4.setText(String.valueOf(Sytem.spaceCount));

		jLabel5.setFont(new java.awt.Font("微软雅黑", 1, 12));
		jLabel5.setText("REMAINING TICKETS  :");

		jLabel6.setFont(new java.awt.Font("微软雅黑", 1, 12));
		jLabel6.setText(String.valueOf(Sytem.totalBlankTickets));

		jLabel7.setFont(new java.awt.Font("微软雅黑", 1, 12));
		jLabel7.setText("COIN BOX  :");

		coinBoxStatus.setFont(new java.awt.Font("微软雅黑", 1, 12));
		coinBoxStatus.setText(getFullOrNot());

		jLabel8.setText("enter time :");

		enterTime.setText("null");

		jLabel9.setText("enter time :");

		exitTime.setText("null");

		getExitTicketBtn.setFont(new java.awt.Font("微软雅黑", 1, 12));
		getExitTicketBtn.setText("GET EXIT TICKET");
		getExitTicketBtn.setEnabled(false);
		getExitTicketBtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				String eKey =getExitId(pConsumer.getSpaceNo());
				jLabel6.setText(String.valueOf(Sytem.nowBlankTickets--));
				JOptionPane.showMessageDialog(null, "your exit ticket id is "+eKey);
				Sytem.consumerHashtable.put(eKey, pConsumer);
				pKey = null;
				pConsumer = null;
				inputMoney = new BigDecimal("0");
		    	publicBill = new BigDecimal("0");
		    	pay.setText(inputMoney+" pounds");
		        fee.setText(publicBill+" pounds");
		        enterTime.setText("null");
		        exitTime.setText("null");
		        publicPayBtn.setEnabled(true);
		        getExitTicketBtn.setEnabled(false);
			}
		});

		helpBtn.setFont(new java.awt.Font("微软雅黑", 1, 12));
		helpBtn.setText("HELP");
		helpBtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				Help.help = new Help();
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(23, 23,
																		23)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap(97,
																										97,
																										97)
																								.addComponent(
																										exit))
																				.addGroup(
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						layout.createSequentialGroup()
																								.addComponent(
																										all,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										61,
																										Short.MAX_VALUE)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										id,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										110,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addComponent(
																										exitBtn,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										105,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addGap(24,
																										24,
																										24))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap(76,
																										76,
																										76)
																								.addComponent(
																										entrance)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																										97,
																										Short.MAX_VALUE)
																								.addComponent(
																										helpBtn))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap(7,
																										7,
																										7)
																								.addComponent(
																										jLabel5,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										151,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										jLabel6,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										127,
																										Short.MAX_VALUE)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																										25,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										jLabel7,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										80,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										coinBoxStatus,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										69,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										jLabel8)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										enterTime,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										165,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										jLabel9)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										exitTime,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										165,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING,
																												false)
																												.addComponent(
																														jButton4,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														Short.MAX_VALUE)
																												.addComponent(
																														jButton1,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														97,
																														javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																										13,
																										Short.MAX_VALUE)
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.TRAILING,
																												false)
																												.addComponent(
																														jButton5,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														Short.MAX_VALUE)
																												.addComponent(
																														jButton2))
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										jButton3,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										107,
																										Short.MAX_VALUE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING)
																												.addComponent(
																														jLabel1)
																												.addComponent(
																														jLabel2))
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING,
																												false)
																												.addComponent(
																														pay,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														Short.MAX_VALUE)
																												.addComponent(
																														fee,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														65,
																														javax.swing.GroupLayout.PREFERRED_SIZE)))
																				.addComponent(
																						getExitTicketBtn)
																				.addGroup(
																						layout.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.TRAILING,
																								false)
																								.addGroup(
																										javax.swing.GroupLayout.Alignment.LEADING,
																										layout.createSequentialGroup()
																												.addComponent(
																														publicPay)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														publicId,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														111,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														publicPayBtn,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														Short.MAX_VALUE))
																								.addGroup(
																										javax.swing.GroupLayout.Alignment.LEADING,
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING)
																												.addGroup(
																														javax.swing.GroupLayout.Alignment.TRAILING,
																														layout.createSequentialGroup()
																																.addGroup(
																																		layout.createParallelGroup(
																																				javax.swing.GroupLayout.Alignment.LEADING,
																																				false)
																																				.addComponent(
																																						staff1,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						Short.MAX_VALUE)
																																				.addComponent(
																																						campusId))
																																.addGap(5,
																																		5,
																																		5)
																																.addGroup(
																																		layout.createParallelGroup(
																																				javax.swing.GroupLayout.Alignment.TRAILING)
																																				.addGroup(
																																						layout.createSequentialGroup()
																																								.addComponent(
																																										staffId,
																																										javax.swing.GroupLayout.PREFERRED_SIZE,
																																										104,
																																										javax.swing.GroupLayout.PREFERRED_SIZE)
																																								.addPreferredGap(
																																										javax.swing.LayoutStyle.ComponentPlacement.RELATED))
																																				.addGroup(
																																						javax.swing.GroupLayout.Alignment.LEADING,
																																						layout.createSequentialGroup()
																																								.addComponent(
																																										allowForPublic,
																																										javax.swing.GroupLayout.PREFERRED_SIZE,
																																										104,
																																										javax.swing.GroupLayout.PREFERRED_SIZE)
																																								.addPreferredGap(
																																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
																																.addGroup(
																																		layout.createParallelGroup(
																																				javax.swing.GroupLayout.Alignment.LEADING,
																																				false)
																																				.addComponent(
																																						scanButton,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						Short.MAX_VALUE)
																																				.addComponent(
																																						getTicketBtn)))
																												.addGroup(
																														layout.createSequentialGroup()
																																.addGap(58,
																																		58,
																																		58)
																																.addComponent(
																																		paymentStation)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																																		95,
																																		javax.swing.GroupLayout.PREFERRED_SIZE))))))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(30, 30,
																		30)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										date,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										120,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addGap(18,
																										18,
																										18)
																								.addComponent(
																										time,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										120,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										jLabel3)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										jLabel4,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										46,
																										javax.swing.GroupLayout.PREFERRED_SIZE)))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		52,
																		Short.MAX_VALUE)))
								.addGap(20, 20, 20)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(entrance)
												.addComponent(helpBtn))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING,
												false)
												.addComponent(
														time,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(
														date,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														22, Short.MAX_VALUE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														jLabel3,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														23,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel4))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel5)
												.addComponent(jLabel6))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(
																		staffId,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addComponent(
																		scanButton))
												.addComponent(campusId))
								.addGap(16, 16, 16)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(getTicketBtn)
												.addComponent(staff1)
												.addComponent(allowForPublic))
								.addGap(27, 27, 27)
								.addComponent(paymentStation)
								.addGap(13, 13, 13)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel7)
												.addComponent(coinBoxStatus))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(publicPay)
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(
																		publicId,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addComponent(
																		publicPayBtn)))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel8)
												.addComponent(enterTime))
								.addGap(1, 1, 1)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel9)
												.addComponent(exitTime))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1)
												.addComponent(fee))
								.addGap(1, 1, 1)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel2)
												.addComponent(pay))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jButton1)
												.addComponent(jButton3)
												.addComponent(jButton2))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jButton4)
												.addComponent(jButton5))
								.addGap(2, 2, 2)
								.addComponent(getExitTicketBtn)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		exit)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						id,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						exitBtn)))
												.addComponent(all))
								.addContainerGap()));

		pack();
		setVisible(true);
	}
	
	private Staff findStaffById(String id){
    	try {
			BufferedReader reader = new BufferedReader(new FileReader(new File("src/staff.txt")));
			String staffString;
			String[] staffs;
			Staff staffInfo = new Staff();
			while((staffString = reader.readLine())!=null && !"".equals(staffString)){
				staffs = staffString.split("@");
				if (id.equals(staffs[0])) {
					staffInfo.setCampusId(id);
					staffInfo.setName(staffs[1]);
					staffInfo.setMotoNo(staffs[2]);
					staffInfo.setMotoType(staffs[3]);
					staffInfo.setColor(staffs[4]);
					staffInfo.setTotalBill(new BigDecimal(staffs[5]));
					return staffInfo;
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
    	return null;
    }
	
	private boolean allowPublicPark(){
		if (Sytem.isHoliday) {
			Calendar calendar = Calendar.getInstance();
			int day = calendar.get(Calendar.DAY_OF_WEEK);
			if (day==Calendar.SATURDAY || day==Calendar.SUNDAY) {
				return true;
			}
			if (Sytem.holidays.contains(new Holiday(calendar))) {
				return true;
			}
			if (isSummerTime(calendar)) {
				return true;
			}
		}
		return false;
	}
	
	private boolean isSummerTime(Calendar calendar){
		Holiday holiday = new Holiday(calendar);
		if (holiday.getMonth()==5 || holiday.getMonth()==6) { //June July is summer holiday
			return true;
		}
		return false;
	}
	
	private String getTempId(Integer spaceNo) {
		StringBuffer sb = new StringBuffer("p");
		return sb.append(spaceNo.toString()).toString();
	}
	private String getExitId(Integer spaceNo) {
		StringBuffer sb = new StringBuffer("e");
		return sb.append(spaceNo.toString()).toString();
	}
	
	private PublicCustomer billForPublicConsumer(PublicCustomer publicConsumer){
    	publicConsumer.setExitDate(new Date());
    	long time = publicConsumer.getExitDate().getTime()-publicConsumer.getEnterDate().getTime();
    	long hours = time/3600000;
    	long min = (time-hours*3600000)/60000;
    	long sec = (time-hours*3600000-min*60000)/1000;
    	parkTime = hours+"h"+min+"m"+sec+"s";
    	BigDecimal bill = new BigDecimal(Double.toString(hours/24*Sytem.fee24.doubleValue()));
    	long hour = hours%24;
    	if (hour>=0 && hour<2) {
			bill = bill.add(Sytem.fee2);
		}else if (hour>=2 && hour<4) {
			bill = bill.add(Sytem.fee4); 
		}else if (hour>=4 && hour<8) {
			bill = bill.add(Sytem.fee8);
		}else if (hour>=8 && hour<12) {
			bill = bill.add(Sytem.fee12);
		}else if (hour>=12 && hour<24) {
			bill = bill.add(Sytem.fee24);
		}
    	publicBill = bill;
    	publicConsumer.setBill(bill);
    	return publicConsumer;
    }
	
	private void payForPublicConsumer(){
    	pConsumer.setPaid(true);
    	Sytem.cashCollections = Sytem.cashCollections.add(inputMoney);
    	coinBoxStatus.setText(getFullOrNot());
    	JOptionPane.showMessageDialog(null, "you have paid enough money");
    	jButton2.setEnabled(false);
		jButton1.setEnabled(false);
		jButton3.setEnabled(false);
		jButton4.setEnabled(false);
		jButton5.setEnabled(false);
		getExitTicketBtn.setEnabled(true);
    }
	
	private StaffCustomer payForStaffConsumer(StaffCustomer staffConsumer) {
		staffConsumer.setExitDate(new Date());
		long parkedTime = staffConsumer.getExitDate().getTime()
				- staffConsumer.getEnterDate().getTime();
		if (parkedTime % (24 * 3600000) == 0) {
			staffConsumer.setBill(new BigDecimal(Double.toString(parkedTime
					/ (24 * 3600000) * Sytem.feeForStaffPerDay.doubleValue())));
		} else {
			staffConsumer.setBill(new BigDecimal(Double.toString((parkedTime
					/ (24 * 3600000) + 1)
					* Sytem.feeForStaffPerDay.doubleValue())));
		}
		Staff staffInfo = staffConsumer.getStaff();
		staffInfo.setTotalBill(staffInfo.getTotalBill().add(
				staffConsumer.getBill()));
		saveTotalBill(staffInfo);
		staffConsumer.setStaff(staffInfo);
		staffConsumer.setPaid(true);
		return staffConsumer;
	}
	    
	private void saveTotalBill(Staff staffInfo) {
		List<String> staffList = new ArrayList<String>();
		try {
			BufferedReader reader = new BufferedReader(new FileReader(new File(
					"src/staff.txt")));
			String info;
			while ((info = reader.readLine()) != null && !"".equals(info)) {
				String[] infos = info.split("@");
				if (infos[0].equals(staffInfo.getCampusId())) {
					infos[5] = Double.toString(staffInfo.getTotalBill()
							.doubleValue());
					info = infos[0] + "@" + infos[1] + "@" + infos[2] + "@"
							+ infos[3] + "@" + infos[4] + "@" + infos[5];
				}
				staffList.add(info);
			}
			reader.close();
			BufferedWriter writer = new BufferedWriter(new FileWriter(new File(
					"src/staff.txt")));
			for (String staff : staffList) {
				writer.write(staff);
				writer.newLine();
			}
			writer.flush();
			writer.close();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}
	
	private void saveRecord(StaffCustomer customer){
		String enterTime = getRecordTime(customer.getEnterDate());
		String exitTime = getRecordTime(customer.getExitDate());
		String record = customer.getStaff().getCampusId()+"@"+customer.getMotoNo()+"@"+enterTime+"@"+exitTime+"@"+customer.getBill();
		try {
			BufferedWriter writer = new BufferedWriter(new FileWriter(new File("src/record.txt"), true));
			writer.write(record);
			writer.newLine();
			writer.flush();
			writer.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private String getTime(boolean bool) {
		Date date = new Date();
		SimpleDateFormat dateFormat = new SimpleDateFormat("EEE, d MMM yyyy'@'HH:mm:ss", Locale.ENGLISH);
		String[] dateTime = dateFormat.format(date).split("@");
		if (bool) {
			return dateTime[0];
		}
		return dateTime[1];
	}
	
	private String getDisplayTime(Date date) {
		SimpleDateFormat dateFormat = new SimpleDateFormat(
				"d MMM yyyy HH:mm:ss", Locale.ENGLISH);
		return dateFormat.format(date);
	}
	private String getRecordTime(Date date) {
		SimpleDateFormat dateFormat = new SimpleDateFormat(
				"yyyy-MM-dd HH:mm:ss");
		return dateFormat.format(date);
	}
	
	private String getFullOrNot(){
		if (Sytem.cashCollections.compareTo(new BigDecimal("300"))>=0) {
			return "ALMOST FULL";
		}
		return "NOT FULL";
	}
    
	
	
	// Variables declaration - do not modify
	public static Parking parking;
	private String parkTime = "0h0m0s";
	private BigDecimal publicBill = new BigDecimal("0");
    private BigDecimal inputMoney = new BigDecimal("0");
    private String pKey;
    private PublicCustomer pConsumer;
    private javax.swing.JLabel all;
	private javax.swing.JLabel allowForPublic;
	private javax.swing.JLabel campusId;
	private javax.swing.JLabel coinBoxStatus;
	private javax.swing.JLabel date;
	private javax.swing.JLabel enterTime;
	private javax.swing.JLabel entrance;
	private javax.swing.JLabel exit;
	private javax.swing.JButton exitBtn;
	private javax.swing.JLabel exitTime;
	private javax.swing.JLabel fee;
	private javax.swing.JButton getExitTicketBtn;
	private javax.swing.JButton getTicketBtn;
	private javax.swing.JButton helpBtn;
	private javax.swing.JTextField id;
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JLabel pay;
	private javax.swing.JLabel paymentStation;
	private javax.swing.JTextField publicId;
	private javax.swing.JLabel publicPay;
	private javax.swing.JButton publicPayBtn;
	private javax.swing.JButton scanButton;
	private javax.swing.JLabel staff1;
	private javax.swing.JTextField staffId;
	private javax.swing.JLabel time;
	private Timer dateTimer;
	private Timer timeTimer;
	// End of variables declaration//GEN-END:variables

}
